(()=>{"use strict";var e;function r(t,a){switch(t.kind){case e.NumericLiteral:return{type:"number",value:t.value};case e.Program:throw"Program cannot be a node inside the ast and should have been handled if it was at the top";case e.BinaryExpr:return function(e,t){let a=r(e.left,t),n=r(e.right,t);if("number"===a.type&&"number"===n.type)return function(e,r,t){switch(t){case"+":return{type:"number",value:e.value+r.value};case"-":return{type:"number",value:e.value-r.value};case"*":return{type:"number",value:e.value*r.value};case"/":return{type:"number",value:e.value/r.value};case"%":return{type:"number",value:e.value%r.value};case"^":return{type:"number",value:e.value**r.value};default:throw"Invalid Operator"}}(a,n,e.operator);if("string"===a.type&&"string"===n.type)return function(e,r,t){if("+"===t)return{type:"string",value:e.value+r.value};throw"Invalid Operator"}(a,n,e.operator);throw"Cannot evaluate Binary Expression"}(t,a);case e.Identifier:let n=t;return a.findVar(n.selector);case e.VariableDecleration:let i=t;return a.defineVar(i.selector,{type:"null",constant:i.constant,value:"null"});case e.AssignmentExpr:let l=t,s=r(l.value,a);return a.setVar(l.selector,s);case e.StringLiteral:return{type:"string",value:t.value};default:throw"Invalid Statement"}}!function(e){e[e.NumericLiteral=0]="NumericLiteral",e[e.Program=1]="Program",e[e.BinaryExpr=2]="BinaryExpr",e[e.Identifier=3]="Identifier",e[e.VariableDecleration=4]="VariableDecleration",e[e.AssignmentExpr=5]="AssignmentExpr",e[e.StringLiteral=6]="StringLiteral"}(e||(e={}));const t={kind:e.Program,code:[{kind:e.VariableDecleration,selector:"y",constant:!1},{kind:e.AssignmentExpr,selector:"y",value:{kind:e.StringLiteral,value:"Hello"}},{kind:e.AssignmentExpr,selector:"y",value:{kind:e.BinaryExpr,operator:"+",left:{kind:e.Identifier,selector:"y"},right:{kind:e.StringLiteral,value:" There"}}},{kind:e.VariableDecleration,selector:"x",constant:!1},{kind:e.AssignmentExpr,selector:"x",value:{kind:e.NumericLiteral,value:10}},{kind:e.BinaryExpr,left:{operator:"+",left:{kind:e.NumericLiteral,value:2},right:{kind:e.AssignmentExpr,value:{kind:e.NumericLiteral,value:3},selector:"x"},kind:e.BinaryExpr},right:{kind:e.Identifier,selector:"x"},operator:"^"}]},a=new class{constructor(e){this.parent=e,this.variables=new Map}defineVar(e,r){if(this.variables.has(e))throw"Variable already exists";return this.variables.set(e,r),r}findVar(e){if(this.variables.has(e))return this.variables.get(e);if(this.parent)return this.parent.findVar(e);throw"Variable does not exist"}setVar(e,r){var t;if(!this.variables.has(e))throw"Variable does not exist";if(!0===(null===(t=this.variables.get(e))||void 0===t?void 0:t.constant))throw"This variable is constant";return this.variables.set(e,r),r}};a.defineVar("null",{type:"null",value:"null",constant:!0}),a.defineVar("true",{type:"boolean",value:!0,constant:!0}),a.defineVar("false",{type:"boolean",value:!1,constant:!0}),function(e,t){!function(e,t){for(let a of e)console.log(r(a,t))}(e.code,t)}(t,a)})();